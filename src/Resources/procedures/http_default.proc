
[% autoescape false %]
{% autoescape false %}

/**
 * Set up page and script parameters
 */
var page       = require('webpage').create(),
    system     = require('system'),
    response   = {},
    debug      = [],
    logs       = [],
    procedure  = {},
    resources  = 0,
    timeout;

/**
 * Global variables
 */
[[ engine.load('global_variables') ]]

/**
 * Define width & height of capture
 */
[[ engine.load('page_clip_rect') ]]

/**
 * Define paper size.
 */
[[ engine.load('page_paper_size') ]]

/**
 * Define viewport size.
 */
[[ engine.load('page_viewport_size') ]]

/**
 * Define zoom factor.
 */
[[ engine.load('page_zoom_factor') ]]

/**
 * Define custom headers.
 */
[[ engine.load('page_custom_headers') ]]

/**
 * Page settings
 */
[[ engine.load('page_settings') ]]

/**
 * Page cookies
 */
[[ engine.load('page_cookies') ]]

/**
 * On resource timeout
 */
page.onResourceTimeout = function (error) {
    [[ engine.load('page_on_resource_timeout') ]]
};

/**
 * On resource requested
 */
page.onResourceRequested = function (req) {
    
    [[ engine.load('page_on_resource_requested') ]]
    
    {% if output.lazy %}
        resources++;
        window.clearTimeout(timeout);
    {% endif %}
};

/**
 * On resource received
 */
page.onResourceReceived = function (res) {
    
    [[ engine.load('page_on_resource_received') ]]
    
    {% if output.lazy %}

        if(!res.stage || res.stage === 'end') {
            
            resources--;
            
            if (resources === 0) {
                
                timeout = window.setTimeout(function() {
                    [[ engine.load('page_open') ]]
                }, 300);
            }
        }

    {% endif %}
};

/**
 * Handle page errors
 */
page.onError = function (msg, trace) {
    [[ engine.load('page_on_error') ]]
};

/**
 * Handle global errors
 */
phantom.onError = function(msg, trace) {
    [[ engine.load('phantom_on_error') ]]
};

/**
 * Execute procedure
 */
procedure.execute = function (status) {
    [[ engine.load( 'procedure_' ~ output.type ) ]]
};

/**
 * Open page
 */
page.open('{{ input.requestTarget }}', '{{ input.method }}', '{{ input.body }}', function (status) {
    
    [[ engine.load('page_body_styles') ]]
    
    {% if output.lazy %}

        debug.push(new Date().toISOString().slice(0, -5) + ' [INFO] PhantomJS - Delaying page render until resources have loaded');
        
        window.setTimeout(function () { 
            [[ engine.load('page_open') ]]
        }, {{ input.timeout - 200 }});

    {% else %}
        [[ engine.load('page_open') ]]
    {% endif %}
});

{% endautoescape %}
[% endautoescape %]